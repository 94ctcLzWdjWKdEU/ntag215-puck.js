"use strict";(self.webpackChunkpuck_ntag215_manager=self.webpackChunkpuck_ntag215_manager||[]).push([[981],{8981:function(a,t,i){i.r(t),i.d(t,{SecureDfuUpdate:function(){return u},waitForFirmware:function(){return h}});var e=i(4942),s=i(4989),n=i.n(s),l=i(5733),o=i.n(l);class r{constructor(a){(0,e.Z)(this,"buffer",void 0),(0,e.Z)(this,"zipFile",void 0),(0,e.Z)(this,"manifest",void 0),(0,e.Z)(this,"loadPromise",void 0),this.buffer=a,this.zipFile=null,this.manifest=null,this.loadPromise=this.load()}async load(){this.zipFile=await o().loadAsync(this.buffer);const a=this.zipFile.file("manifest.json");if(null===a)throw new Error("Unable to find manifest, is this a proper DFU package?");this.manifest=JSON.parse(await a.async("string")).manifest}async getImage(){await this.loadPromise;for(var a=arguments.length,t=new Array(a),i=0;i<a;i++)t[i]=arguments[i];for(const a of t)if(this.manifest[a]){const t=this.manifest[a],i={type:a,initFile:t.dat_file,imageFile:t.bin_file,initData:null,imageData:null};return i.initData=await this.zipFile.file(i.initFile).async("arraybuffer"),i.imageData=await this.zipFile.file(i.imageFile).async("arraybuffer"),i}}async getBaseImage(){return this.getImage("softdevice","bootloader","softdevice_bootloader")}async getAppImage(){return this.getImage("application")}}const c=i(4606),f=i.e(43).then(i.t.bind(i,9043,23));class u{constructor(a,t,i){(0,e.Z)(this,"dfu",void 0),(0,e.Z)(this,"logCallback",void 0),(0,e.Z)(this,"progressCallback",void 0),(0,e.Z)(this,"statusCallback",void 0),this.logCallback=t,this.statusCallback=a,this.progressCallback=i,this.dfu=new(n())(c.buf),this.dfu.addEventListener(n().EVENT_LOG,t),this.dfu.addEventListener(n().EVENT_PROGRESS,i)}async loadPackage(){return new r((await f).default)}async update(){const a=await this.loadPackage(),t=await a.getBaseImage(),i=await a.getAppImage();await this.statusCallback({message:"Connecting to device"});const e=await this.dfu.requestDevice(!1,null);for(const a of[t,i])a&&(await this.statusCallback({message:`Updating ${a.type}: ${a.imageFile}...`}),await this.dfu.update(e,a.initData,a.imageData));await this.statusCallback({message:"Update complete!",final:!0})}}async function h(){await f}(0,e.Z)(u,"EVENT_LOG","log"),(0,e.Z)(u,"EVENT_PROGRESS","progress"),(0,e.Z)(u,"EVENT_STATUS","status")}}]);
//# sourceMappingURL=9ef6f8e99c1b21e91f00d263bec4219d.map